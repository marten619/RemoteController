C51 COMPILER V9.56.0.0   MASTERI2C                                                         03/07/2018 17:45:35 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MASTERI2C
OBJECT MODULE PLACED IN .\MasterI2C.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\source\MasterI2C.c LARGE OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\MasterI2C.lst) TABS(3) OBJECT(.\MasterI2C.obj)

line level    source

   1          #define _MASTER_I2C_C_
   2          
   3          #include "..\include\System_config.h"
   4          
   5          
   6          /*********************************************************************
   7          * delay
   8          *********************************************************************/
   9          void delay(void)
  10          {
  11   1          Uint8 i;
  12   1      
  13   1          for ( i = 0; i < 10; i++ )
  14   1              _nop_();
  15   1      }
  16          
  17          /*********************************************************************
  18          * I2C_MasterInit
  19          *********************************************************************/
  20          void I2C_MasterInit(void)
  21          {
  22   1          IOSEL |= BIT1;               // I2C0_SEL;
  23   1          I2CMCR = RSTM;               // reset master module
  24   1          I2CMTP = 0x05;               // SHA204(7), set speed : 2 x (1 + 6) x 10 x 78.128ns
  25   1                                       // I2CMTP=6 (80Khz)
  26   1                                       // I2CMTP=5 (101Khz)
  27   1                                       // I2CMTP=1 (316Khz)
  28   1          I2CMCR = SLRST + RUN;     // reset bus
  29   1          while ( 0 != (I2CMCR & BUSY) )  ;
  30   1          //P3_6 = 0;
  31   1      }
  32          
  33          
  34          /*********************************************************************
  35          * I2C_Reset
  36          *********************************************************************/
  37          void I2C_Slave_Reset(void)
  38          {
  39   1          // I2CMCR = RSTM;               // reset master module
  40   1          I2CMCR = SLRST + RUN;        // reset bus
  41   1          while ( 0 != (I2CMCR & BUSY) )  ;
  42   1          //P3_6 = 0;
  43   1      }
  44          
  45          /*********************************************************************
  46          * bus_busy
  47          *********************************************************************/
  48          void bus_busy(void)
  49          {
  50   1          while ( 0 != (I2CMCR & BUS_BUSY) );
  51   1      }
  52          
  53          /*********************************************************************
  54          * eep_busy
C51 COMPILER V9.56.0.0   MASTERI2C                                                         03/07/2018 17:45:35 PAGE 2   

  55          *********************************************************************/
  56          void eep_busy(void)
  57          {
  58   1          while ( 0 == (I2CMCR & BUSY) )  ;
  59   1          while ( 1 == (I2CMCR & BUSY) )  ;
  60   1      }
  61          
  62          /*********************************************************************
  63          * write_setup
  64          *********************************************************************/
  65          void write_setup(Uint8 slave_addr)
  66          {
  67   1          I2CMSA = (slave_addr<<1);
  68   1      }
  69          
  70          /*********************************************************************
  71          * I2cWrite
  72          *********************************************************************/
  73          Uint8 I2cWrite(Uint8 i2c_data, Uint8 mcr)
  74          {
  75   1          I2CMBUF = i2c_data;
  76   1          I2CMCR = mcr;
  77   1          delay();
  78   1          while ( 0 != (I2CMCR & BUSY) )  ;                                             
  79   1      
  80   1          if ( I2CMCR & (ERROR+ARB_LOST) )
  81   1          {
  82   2              if ( 0 == (I2CMCR & ARB_LOST) )
  83   2                  I2CMCR = STOP;
  84   2      
  85   2              return FAIL;
  86   2          }
  87   1      
  88   1          return PASS;
  89   1      }
  90          
  91          /*********************************************************************
  92          * read_setup
  93          *********************************************************************/
  94          void read_setup(Uint8 slave_addr)
  95          {
  96   1          I2CMSA = (slave_addr<<1) | BIT0;
  97   1      }
  98          
  99          /*********************************************************************
 100          * I2cRead
 101          *********************************************************************/
 102          Uint8 I2cRead(Uint8 mcr)
 103          {
 104   1          I2CMCR = mcr;
 105   1          delay();
 106   1          while ( 0 != (I2CMCR & BUSY) )  ;
 107   1      
 108   1          if ( I2CMCR & (ERROR+ARB_LOST) )
 109   1          {
 110   2              if ( 0 == (I2CMCR & ARB_LOST) )
 111   2                  I2CMCR = STOP;
 112   2              return FAIL;
 113   2          }
 114   1      
 115   1          return PASS;
 116   1      }
C51 COMPILER V9.56.0.0   MASTERI2C                                                         03/07/2018 17:45:35 PAGE 3   

 117          
 118          /*********************************************************************
 119          * I2CWriteData
 120          *********************************************************************/
 121          Uint8 I2CWriteData(Uint8 id, Uint8 *buf, Uint8 length)
 122          {
 123   1          Uint8 mcr;
 124   1          bit bSTART;
 125   1      
 126   1          if ( length == 0 )
 127   1              return FAIL;
 128   1      
 129   1          write_setup( id );
 130   1          bus_busy();
 131   1          bSTART = 1;
 132   1      
 133   1          while(length)
 134   1          {
 135   2              if ( length == 1 )
 136   2              {
 137   3                  if ( bSTART )
 138   3                  {
 139   4                      bSTART = 0;
 140   4                      mcr = START+STOP+RUN;
 141   4                  }
 142   3                  else
 143   3                  {
 144   4                      mcr = STOP+RUN;
 145   4                  }
 146   3              }
 147   2              else
 148   2              {
 149   3                  if ( bSTART )
 150   3                  {
 151   4                      bSTART = 0;
 152   4                      mcr = START+RUN;
 153   4                  }
 154   3                  else
 155   3                  {
 156   4                      mcr = RUN;
 157   4                  }
 158   3              }
 159   2      
 160   2              if ( PASS != I2cWrite(*buf, mcr) )
 161   2                  return FAIL;
 162   2              buf++; length--;
 163   2          }
 164   1      
 165   1          return PASS;
 166   1      }
 167          
 168          /*********************************************************************
 169          * I2CReadData
 170          *********************************************************************/
 171          Uint8 I2CReadData(Uint8 id, Uint8* buf, Uint8 length)
 172          {
 173   1          Uint8 mcr;
 174   1          bit bSTART;
 175   1      
 176   1          if ( length == 0 )
 177   1              return FAIL;
 178   1      
C51 COMPILER V9.56.0.0   MASTERI2C                                                         03/07/2018 17:45:35 PAGE 4   

 179   1          read_setup(id);
 180   1          bus_busy();
 181   1          bSTART = 1;
 182   1      
 183   1          while(length)
 184   1          {
 185   2              if ( length == 1 )
 186   2              {
 187   3                  if ( bSTART )
 188   3                  {
 189   4                      bSTART = 0;
 190   4                      mcr = START+STOP+RUN;
 191   4                  }
 192   3                  else
 193   3                  {
 194   4                      mcr = STOP+RUN;
 195   4                  }
 196   3              }
 197   2              else
 198   2              {
 199   3                  if ( bSTART )
 200   3                  {
 201   4                      bSTART = 0;
 202   4                      mcr = START+ACK+RUN;
 203   4                  }
 204   3                  else
 205   3                  {
 206   4                      mcr = ACK+RUN;
 207   4                  }
 208   3              }
 209   2              if ( PASS != I2cRead(mcr) )
 210   2                  return FAIL;
 211   2              *buf++ = I2CMBUF; length--;
 212   2          }
 213   1          return PASS;
 214   1      }
 215          
 216          /*********************************************************************
 217          * WriteEEPROM
 218          *
 219          * EEPROM Page Write
 220          *      START ID a ADDR a DATA0 a DATA1 a .... DATA127 a STOP
 221          *********************************************************************/
 222          Uint8 WrTestEEPROM(Uint8 id, Uint16 addr, Uint8 *buf, Uint8 length)
 223          {
 224   1          Uint8 mcr;
 225   1          Uint8 addr_l, addr_h;
 226   1          
 227   1          if ( length > 128 )
 228   1              return FAIL;
 229   1          if ( length == 0 )
 230   1              return FAIL;
 231   1      
 232   1          // write_setup( id );   
 233   1          I2CMSA = (id << 1);
 234   1      //  I2CMCR = START | RUN;
 235   1          bus_busy();
 236   1          
 237   1          addr_l = addr & 0xff;
 238   1          addr_h = addr >> 8;
 239   1          
 240   1          I2CMBUF = addr_h;
C51 COMPILER V9.56.0.0   MASTERI2C                                                         03/07/2018 17:45:35 PAGE 5   

 241   1          I2CMCR = START + RUN;
 242   1          delay();
 243   1              bus_busy();
 244   1          
 245   1          I2CMBUF = addr_l;
 246   1          I2CMCR = RUN;
 247   1          delay();
 248   1          bus_busy();
 249   1          
 250   1          I2CMBUF = *buf;
 251   1          I2CMCR = STOP+RUN;
 252   1          delay();
 253   1         
 254   1          bus_busy();
 255   1      
 256   1      //  if ( PASS != I2cWrite(addr_h, START + RUN) )
 257   1      //    return FAIL;
 258   1      //  bus_busy();
 259   1      //    
 260   1      //  if ( PASS != I2cWrite(addr_l, RUN) )
 261   1      //    return FAIL;
 262   1          // bus_busy();
 263   1          
 264   1      //    while(length)
 265   1      //    {
 266   1      //        if ( length == 1 )
 267   1      //            mcr = STOP+RUN;
 268   1      //        else
 269   1      //            mcr = RUN;
 270   1      
 271   1      //        if ( PASS != I2cWrite(*buf, mcr) )
 272   1      //            return FAIL;
 273   1      //        buf++; length--;
 274   1      //    }
 275   1      
 276   1          return PASS;
 277   1      }
*** WARNING C280 IN LINE 224 OF ..\source\MasterI2C.c: 'mcr': unreferenced local variable
 278          
 279          /*********************************************************************
 280          * WriteEEPROM
 281          *
 282          * EEPROM Page Write
 283          *      START ID a ADDR a DATA0 a DATA1 a .... DATA127 a STOP
 284          *********************************************************************/
 285          Uint8 WriteEEPROM(Uint8 id, Uint16 addr, Uint8 *buf, Uint8 length)
 286          {
 287   1          Uint8 mcr;
 288   1          Uint8 addr_l, addr_h;
 289   1          // Uint8 dat = *buf;
 290   1         
 291   1          if ( length > 128 )
 292   1              return FAIL;
 293   1          if ( length == 0 )
 294   1              return FAIL;
 295   1      
 296   1          write_setup( id );   
 297   1          // I2CMSA = (id << 1);
 298   1          I2CMCR = START | RUN;
 299   1          while ( 1 == (I2CMCR & ADDR_ACK) )  ;
 300   1          //bus_busy();
 301   1          
C51 COMPILER V9.56.0.0   MASTERI2C                                                         03/07/2018 17:45:35 PAGE 6   

 302   1          addr_l = addr & 0xff;
 303   1          addr_h = addr >> 8;
 304   1          
 305   1          I2CMBUF = addr_h;
 306   1          //I2CMCR = START | RUN;
 307   1          //I2CMCR = RUN;
 308   1          //delay();
 309   1          eep_busy();
 310   1          
 311   1          I2CMBUF = addr_l;
 312   1          I2CMCR = RUN;
 313   1          //delay();
 314   1          eep_busy();
 315   1          
 316   1          while(length)
 317   1          {
 318   2              if ( length == 1 )
 319   2                  mcr = STOP+RUN;
 320   2              else
 321   2                  mcr = RUN;
 322   2      
 323   2              if ( PASS != I2cWrite(*buf, mcr) )
 324   2                  return FAIL;
 325   2              buf++; length--;
 326   2          }
 327   1      
 328   1          return PASS;
 329   1      }
 330          
 331          
 332          /*********************************************************************
 333          * ReadEEPROM
 334          *
 335          * EEPROM Sequential Read
 336          *
 337          *   START ID a ADDR a START ADDRESS1 a DATA a DATA
 338          *      a ... DATA n STOP
 339          *********************************************************************/
 340          Uint8 ReadEEPROM(Uint8 id, Uint16 addr, Uint8* buf, Uint8 length)
 341          {
 342   1          Uint8 mcr;
 343   1          Uint8 addr_l, addr_h;
 344   1          bit bSTART;
 345   1      
 346   1          if ( length == 0 )
 347   1              return FAIL;
 348   1      
 349   1          write_setup( id );
 350   1          while ( 1 == (I2CMCR & BUS_BUSY) )  ;
 351   1          //bus_busy();
 352   1      
 353   1          addr_l = addr & 0xff;
 354   1          addr_h = addr >> 8;
 355   1          
 356   1         if ( PASS != I2cWrite(addr_h, START+RUN) )
 357   1              return FAIL;  
 358   1          if ( PASS != I2cWrite(addr_l, RUN) )
 359   1              return FAIL;
 360   1          
 361   1      
 362   1          read_setup(id);
 363   1          bSTART = 1;
C51 COMPILER V9.56.0.0   MASTERI2C                                                         03/07/2018 17:45:35 PAGE 7   

 364   1      
 365   1          while(length)
 366   1          {
 367   2              if ( length == 1 )
 368   2              {
 369   3                  if ( bSTART )
 370   3                  {
 371   4                      bSTART = 0;
 372   4                      mcr = START+STOP+RUN;
 373   4                  }
 374   3                  else
 375   3                  {
 376   4                      mcr = STOP+RUN;
 377   4                  }
 378   3              }
 379   2              else
 380   2              {
 381   3                  if ( bSTART )
 382   3                  {
 383   4                      bSTART = 0;
 384   4                      mcr = START+ACK+RUN;
 385   4                  }
 386   3                  else
 387   3                  {
 388   4                      mcr = ACK+RUN;
 389   4                  }
 390   3              }
 391   2              if ( PASS != I2cRead(mcr) )
 392   2                  return FAIL;
 393   2              *buf++ = I2CMBUF; length--;
 394   2          }
 395   1          return PASS;
 396   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1089    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     50    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     42    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
